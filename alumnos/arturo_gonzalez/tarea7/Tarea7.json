{"paragraphs":[{"text":"%pyspark\n\nfrom pyspark.ml.feature import PCA\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.regression import LinearRegression,RandomForestRegressor\nfrom pyspark.ml.tuning import ParamGridBuilder, CrossValidator\nfrom pyspark.ml.feature import VectorAssembler, StringIndexer, OneHotEncoder \n\n#Leemos archivo\ndatos = spark.read.csv('s3a://al102964-bucket1/tarea4/ejercicio_b/flights.csv',header=True,inferSchema=True)\n\n#Lista para seleccionar los campos de utilidad\ncampos = ['YEAR', 'MONTH', 'DAY', 'DAY_OF_WEEK', 'AIRLINE','FLIGHT_NUMBER','ORIGIN_AIRPORT', 'DESTINATION_AIRPORT', 'SCHEDULED_DEPARTURE','DEPARTURE_DELAY', 'SCHEDULED_TIME','DISTANCE','SCHEDULED_ARRIVAL']\n\ndatos = datos.select(campos).na.drop()\n\ndatos = datos.withColumnRenamed(\"DEPARTURE_DELAY\", \"label\")\n\n#Separamos en train y test\n(training_data, test_data) = datos.randomSplit([0.7, 0.3])\n\n#Definimos lista de variables categoricas\ncategorical = ['AIRLINE','ORIGIN_AIRPORT','DESTINATION_AIRPORT']\nsteps = [StringIndexer(inputCol=column, outputCol=column+\"_INDEXED\",handleInvalid='skip').fit(training_data) for column in categorical]\n\n#Hacemos el onehot encoding a las variables categoricas \nencodersteps = [OneHotEncoder(inputCol=column+\"_INDEXED\", outputCol=column+\"_OH\") for column in categorical]\n\nsteps += encodersteps\n\n#Definimos lista de campos a meter dentro de columna de features\ncampos = ['YEAR','MONTH','DAY','DAY_OF_WEEK','AIRLINE_OH','FLIGHT_NUMBER','ORIGIN_AIRPORT_OH','DESTINATION_AIRPORT_OH','SCHEDULED_DEPARTURE','SCHEDULED_TIME','DISTANCE','SCHEDULED_ARRIVAL']\nassembler = VectorAssembler(inputCols=campos,outputCol=\"features_1\")\nsteps.append(assembler)\n\n#Definimos PCA para reducir dimensionalidad\npca = PCA(k=10, inputCol=\"features_1\", outputCol=\"features\")\nsteps.append(pca)\n\n#Definimos modelo de regresion lineal\nlr = LinearRegression()\n\n#Lo vamos a necesitar para aplicar el RandomForestRegressor()\nstepsrf = list(steps)\n\n#Agregamos a los pasos a ejecutar por el pipeline de regresion lineal\nsteps.append(lr)\n\n#Construimos el pipeline\npipeline_lr = Pipeline(stages=steps)\n\n#Construimos el paramGrid para probar los mejores parametros del algoritmo de regresion\nparamGrid_lr = ParamGridBuilder() \\\n    .addGrid(lr.maxIter, [5,10,15])\\\n    .addGrid(lr.regParam, [0.0,0.5,1.0]).build()\n\n\n#Construimos un crossvalidator en donde especificamos el objeto pipeline, parameGrid, el evaluador y el numFolds\ncrossval_lr = CrossValidator(estimator=pipeline_lr,\n                          estimatorParamMaps=paramGrid_lr,\n                          evaluator=RegressionEvaluator(),\n                          numFolds=10)  # use 3+ folds in practice\n\n\n#Creamos un objeto del tipo RandomForest Regressor\nrf = RandomForestRegressor()\n\n#Lo agregamos al conjunto de steps\nstepsrf.append(rf)\n\npipeline_rf = Pipeline(stages=stepsrf)\n\nparamGrid_rf = ParamGridBuilder() \\\n    .addGrid(rf.numTrees, [3,5,7])\\\n    .addGrid(rf.maxBins, [20,25,32]).build()\n\ncrossval_rf = CrossValidator(estimator=pipeline_rf,\n                          estimatorParamMaps=paramGrid_rf,\n                          evaluator=RegressionEvaluator(),\n                          numFolds=10)  # use 3+ folds in practice","user":"anonymous","dateUpdated":"2018-04-27T07:26:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524813806139_-504881301","id":"20180427-072326_760072897","dateCreated":"2018-04-27T07:23:26+0000","dateStarted":"2018-04-27T07:26:51+0000","dateFinished":"2018-04-27T07:28:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1270"},{"text":"%pyspark\n\nimport time \n\ndef magic_loop(modelos, data):\n    resultado_modelos = []\n    for model in modelos:\t\t\t    \n\t    resultado_modelos.append(model.fit(data))\n    return resultado_modelos\n\ntiempo_inicio = time.time()\nmodelos = magic_loop([crossval_lr,crossval_rf], training_data)\ntiempo_fin = time.time()","user":"anonymous","dateUpdated":"2018-04-27T07:30:37+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524814011483_-1235779974","id":"20180427-072651_1729215831","dateCreated":"2018-04-27T07:26:51+0000","dateStarted":"2018-04-27T07:30:37+0000","dateFinished":"2018-04-27T10:58:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1271"},{"text":"%pyspark\n\n#Tiempo de ejecucion es la resta del tiempo_fin - tiempo_inicio y dividimos entre 60 para obtener minutos\nprint(\"El tiempo de ejecucion fue: \"+str((tiempo_fin - tiempo_inicio)/60)+\"minutos\")","user":"anonymous","dateUpdated":"2018-04-27T14:06:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"El tiempo de ejecucion fue: 208.065182483minutos\n"}]},"apps":[],"jobName":"paragraph_1524814237676_1388410781","id":"20180427-073037_289896246","dateCreated":"2018-04-27T07:30:37+0000","dateStarted":"2018-04-27T14:06:24+0000","dateFinished":"2018-04-27T14:06:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1272"},{"text":"%pyspark\n#Evaluamos el mejor modelo de regresion lineal\n\n#Obtenemos predicciones con el modelo de regresion lineal\nprediction = modelos[0].transform(test_data)\nprediction.select(\"label\",\"prediction\").show()\n\n#Verificamos el rmse del modelo de regresion lineal \nevaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"label\",\n                                predictionCol=\"prediction\")","user":"anonymous","dateUpdated":"2018-04-27T14:09:50+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+------------------+\n|label|        prediction|\n+-----+------------------+\n|   -6|12.812291422120481|\n|  178|15.326019297761185|\n|    0|13.558614021381473|\n|   -5|12.757996797715165|\n|   31|12.156384781253703|\n|    3|13.965495958293726|\n|   33| 9.445948122713105|\n|   -4|13.013425011681864|\n|   40|11.082974830927348|\n|   -7|  7.42029857438438|\n|   -1| 20.73629322967821|\n|    0|13.764266861494136|\n|   80|19.298610170583583|\n|   -3|10.861788168313371|\n|   -2| 12.10854514471741|\n|   16| 8.574620346539014|\n|   10|18.471841912377062|\n|   -2|15.287412736238892|\n|   -7| 4.743222733560294|\n|   16| 8.431066439743788|\n+-----+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1524837947449_1742297765","id":"20180427-140547_2104659903","dateCreated":"2018-04-27T14:05:47+0000","dateStarted":"2018-04-27T14:09:50+0000","dateFinished":"2018-04-27T14:09:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1273"},{"text":"%pyspark\n#Verificamos el rmse del modelo de regresion lineal \nevaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"label\",\n                                predictionCol=\"prediction\")\nrmse = evaluator.evaluate(prediction)\nprint(\"Root-mean-square error = \" + str(rmse))","user":"anonymous","dateUpdated":"2018-04-27T14:10:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Root-mean-square error = 36.551177318\n"}]},"apps":[],"jobName":"paragraph_1524838090051_244701804","id":"20180427-140810_675379447","dateCreated":"2018-04-27T14:08:10+0000","dateStarted":"2018-04-27T14:10:02+0000","dateFinished":"2018-04-27T14:10:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1274"},{"text":"%pyspark\n#Obtenemos predicciones con el modelo de random forest regressor\nprediction = modelos[1].transform(test_data)\nprediction.select(\"label\",\"prediction\").show()\n\n","user":"anonymous","dateUpdated":"2018-04-27T14:10:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+------------------+\n|label|        prediction|\n+-----+------------------+\n|   -6| 13.10741052039246|\n|  178| 13.92413038131735|\n|    0|10.137194652474902|\n|   -5| 7.403799802243888|\n|   31| 13.10741052039246|\n|    3| 13.10741052039246|\n|   33|  8.77185636092673|\n|   -4| 13.10741052039246|\n|   40| 13.10741052039246|\n|   -7| 7.968912272943229|\n|   -1|13.963370693865828|\n|    0|13.888007013757813|\n|   80|14.341935129984462|\n|   -3| 13.10741052039246|\n|   -2| 7.403799802243888|\n|   16| 7.968912272943229|\n|   10|15.761686861715775|\n|   -2|12.342139243570744|\n|   -7|4.8169153531305495|\n|   16| 7.755735503631554|\n+-----+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1524838022098_-2021792670","id":"20180427-140702_756374167","dateCreated":"2018-04-27T14:07:02+0000","dateStarted":"2018-04-27T14:10:27+0000","dateFinished":"2018-04-27T14:10:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1275"},{"text":"%pyspark\n#Evaluamos el modelo de random forest regressor\nevaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"label\",\n                                predictionCol=\"prediction\")\nrmse = evaluator.evaluate(prediction)\nprint(\"Root-mean-square error = \" + str(rmse))","user":"anonymous","dateUpdated":"2018-04-27T14:10:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Root-mean-square error = 36.4089766457\n"}]},"apps":[],"jobName":"paragraph_1524838137109_-1347142313","id":"20180427-140857_1221774753","dateCreated":"2018-04-27T14:08:57+0000","dateStarted":"2018-04-27T14:10:38+0000","dateFinished":"2018-04-27T14:10:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1276"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-04-27T14:09:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524838149148_-738054156","id":"20180427-140909_1153614874","dateCreated":"2018-04-27T14:09:09+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:1277"}],"name":"Tarea7","id":"2DBV2JZF8","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
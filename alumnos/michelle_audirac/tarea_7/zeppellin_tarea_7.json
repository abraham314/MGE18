{"paragraphs":[{"text":"%spark.pyspark\n\n##########\n# cargo los paquetes\n\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import *\nfrom pyspark.ml.feature import OneHotEncoder, StringIndexer\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml.regression import LinearRegression\nfrom pyspark.ml.regression import GBTRegressor \nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\n#spark = SparkSession.builder.master(\"local[3]\").getOrCreate()\n\n##########\n# cargo los datos\n\ndata = spark.read.csv('s3a://audiracmichelle/flights/flights.csv', header =True)\n\n\n# selecciono las columnas que voy a utilizar\ndata = data.withColumn(\"HOUR_DEPARTURE\", floor(data.SCHEDULED_DEPARTURE / 100))\ndata = data.select(\"DAY_OF_WEEK\", \"AIRLINE\", \"HOUR_DEPARTURE\", \ndata[\"DEPARTURE_DELAY\"].cast(DoubleType())).where(\"CANCELLED = 0\")\n\ndata = data.withColumnRenamed('DEPARTURE_DELAY', \n                              'label')\n\ndata = data.dropna()\n\n##########\n# separo en train y test sets\n\ntrain_data, test_data = data.randomSplit([0.7, 0.3])\n\n##########\n# transformacion de variables para el pipeline\n\nday_of_week_indexer = StringIndexer(inputCol=\"DAY_OF_WEEK\", outputCol=\"DAY_OF_WEEK_CATEGORICAL\")\nairline_indexer = StringIndexer(inputCol=\"AIRLINE\", outputCol=\"AIRLINE_CATEGORICAL\")\nhour_departure_indexer = StringIndexer(inputCol=\"HOUR_DEPARTURE\", outputCol=\"HOUR_DEPARTURE_CATEGORICAL\")\n\nday_of_week_encoder = OneHotEncoder(inputCol=\"DAY_OF_WEEK_CATEGORICAL\", outputCol=\"DAY_OF_WEEK_DUMMY\")\nairline_encoder = OneHotEncoder(inputCol=\"AIRLINE_CATEGORICAL\", outputCol=\"AIRLINE_DUMMY\")\nhour_departure_encoder = OneHotEncoder(inputCol=\"HOUR_DEPARTURE_CATEGORICAL\", outputCol=\"HOUR_DEPARTURE_DUMMY\")\n\nassembler = VectorAssembler(inputCols = [\"DAY_OF_WEEK_DUMMY\", \"AIRLINE_DUMMY\", \"HOUR_DEPARTURE_DUMMY\"],\n                            outputCol = \"features\")\n\n##########\n# modelos\n\n# modelo 1\n\nlr = LinearRegression(maxIter=10)\n\n# modelo 2\n\ngbt = GBTRegressor(maxIter=20)\n\n\nmodelos = [lr, gbt]\n\n###########\n# grids\n\n# defino el grid de parametros a evaluar del modelo 1\n\nparamGrid_lr = ParamGridBuilder() \\\n     .addGrid(lr.regParam, [0.1, 0.01, 0.001]) \\\n     .addGrid(lr.elasticNetParam, [0.0, 0.5, 1.0]) \\\n     .build()\n\n# defino el grid de parametros a evaluar del modelo 2\n\nparamGrid_gbt = ParamGridBuilder() \\\n     .addGrid(gbt.maxDepth, [1, 2, 3]) \\\n     .addGrid(gbt.subsamplingRate, [0.33, 0.66, 1.0]) \\\n     .build()\n\ngrids = [paramGrid_lr, paramGrid_gbt]\n\n","user":"anonymous","dateUpdated":"2018-04-25T20:15:57+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524687307621_-1770538804","id":"20180425-201507_892420087","dateCreated":"2018-04-25T20:15:07+0000","dateStarted":"2018-04-25T20:15:57+0000","dateFinished":"2018-04-25T20:16:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1133"},{"text":"%spark.pyspark\n\n##########\n# magic loop\n\nbestModel = list()\neval = list()\n\nfor i in range(2):\n\t# defino el pipeline\n\tpipeline = Pipeline(stages=[day_of_week_indexer, \n                            airline_indexer, \n                            hour_departure_indexer, \n                            day_of_week_encoder, \n                            airline_encoder, \n                            hour_departure_encoder, \n                            assembler, \n                            modelos[i]])\n\n\t# defino el cross validator\n\tcrossval = CrossValidator(estimator=pipeline,\n                          estimatorParamMaps=grids[i],\n                          evaluator=RegressionEvaluator(), \n                          numFolds = 10)\n\n\t# genero los modelos\n\tcvModel = crossval.fit(train_data)\n\n\teval.append(RegressionEvaluator().evaluate(cvModel.transform(test_data)))\n\tbestModel.append(cvModel.bestModel.stages[-1])\n","user":"anonymous","dateUpdated":"2018-04-25T21:07:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524687357760_413372574","id":"20180425-201557_1084871102","dateCreated":"2018-04-25T20:15:57+0000","dateStarted":"2018-04-25T21:07:11+0000","dateFinished":"2018-04-25T23:10:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1134","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark.pyspark\n# vemos la evaluacion del modelo 1\nprint(eval[0])\n","user":"anonymous","dateUpdated":"2018-04-25T23:23:50+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524687387132_1431264922","id":"20180425-201627_699371088","dateCreated":"2018-04-25T20:16:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1135","dateFinished":"2018-04-25T23:23:50+0000","dateStarted":"2018-04-25T23:23:50+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"36.4852688851\n"}]}},{"text":"%spark.pyspark\n# obtengo mejores parametros del modelo 1\nprint(bestModel[0].extractParamMap().get(bestModel[0].getParam('regParam')))\nprint(bestModel[0].extractParamMap().get(bestModel[0].getParam('elasticNetParam')))","user":"anonymous","dateUpdated":"2018-04-25T23:23:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524697973823_1804281108","id":"20180425-231253_2065275336","dateCreated":"2018-04-25T23:12:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1229","dateFinished":"2018-04-25T23:23:55+0000","dateStarted":"2018-04-25T23:23:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.01\n0.0\n"}]}},{"text":"%spark.pyspark\n# vemos la evaluacion del modelo 2\nprint(eval[1])","user":"anonymous","dateUpdated":"2018-04-25T23:24:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524698540113_-862215949","id":"20180425-232220_64344849","dateCreated":"2018-04-25T23:22:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1335","dateFinished":"2018-04-25T23:24:06+0000","dateStarted":"2018-04-25T23:24:06+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"36.52107874\n"}]}},{"text":"%spark.pyspark\n# obtengo mejores parametros del modelo 2\nprint(bestModel[1].extractParamMap().get(bestModel[1].getParam('maxDepth')))\nprint(bestModel[1].extractParamMap().get(bestModel[1].getParam('subsamplingRate')))","user":"anonymous","dateUpdated":"2018-04-25T23:24:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524698646871_-1008635070","id":"20180425-232406_1848333235","dateCreated":"2018-04-25T23:24:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1451","dateFinished":"2018-04-25T23:24:20+0000","dateStarted":"2018-04-25T23:24:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"3\n0.66\n"}]}},{"text":"%spark.pyspark\n","user":"anonymous","dateUpdated":"2018-04-25T23:24:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524698660411_1031703672","id":"20180425-232420_584449210","dateCreated":"2018-04-25T23:24:20+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1526"}],"name":"tarea_7","id":"2DBMRDCZ5","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
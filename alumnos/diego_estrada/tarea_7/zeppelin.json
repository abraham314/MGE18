{"paragraphs":[{"text":"%pyspark\n\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\nfrom pyspark.ml.regression import RandomForestRegressor\nfrom pyspark.ml.regression import LinearRegression\nfrom pyspark.ml.regression import DecisionTreeRegressor\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml.feature import StringIndexer\nfrom pyspark.ml.feature import OneHotEncoder\nfrom pyspark.ml.feature import PCA\nfrom pyspark.ml import Pipeline\n","dateUpdated":"2018-04-22T02:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164012_2138233163","id":"20180415-172416_122868442","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:271","user":"anonymous","dateFinished":"2018-04-22T02:13:33+0000","dateStarted":"2018-04-22T02:12:56+0000"},{"text":"%pyspark\n\n#Importamos los datos\n\nflights = spark.read.csv(\"s3://mat34710/tareas/datos/flights.csv\", header = True, inferSchema = True, nullValue = 'null')","dateUpdated":"2018-04-22T02:13:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164018_-2145191666","id":"20180420-223019_174767821","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:272","user":"anonymous","dateFinished":"2018-04-22T02:14:28+0000","dateStarted":"2018-04-22T02:13:56+0000"},{"text":"%pyspark\n\n#Vemos con cuantas observaciones contamos\n\nflights.count()\n","dateUpdated":"2018-04-22T02:12:44+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5819079\n"}]},"apps":[],"jobName":"paragraph_1524363164018_-2145191666","id":"20180420-215532_1394007924","dateCreated":"2018-04-22T02:12:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:273"},{"text":"%pyspark\n\n#Primero debemos considerar todas las variables con las que disponemos, como deseamos predecir 'DEPARTURE_DELAY', no queremos utilizar ninguna variable con la que no contemos antes del despegue, como lo son 'DEPARTURE_TIME','TAXI_OUT','WHEELS_OFF','ELAPSED_TIME','AIR_TIME','WHEELS_ON','TAXI_IN','ARRIVAL_TIME','ARRIVAL_DELAY','DIVERTED','CANCELLED','CANCELLATION_REASON','AIR_SYSTEM_DELAY','SECUTIRY_DELAY','AIRLINE_DELAY','LATE_AIRCRAFT_DELAY','WEATHER_DELAY'. De esta forma, nos quedamos unicamente con la información que realmente tendremos disponible cuando deseemos hacer predicciones \n\nflights.columns\n","dateUpdated":"2018-04-22T02:12:44+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['YEAR', 'MONTH', 'DAY', 'DAY_OF_WEEK', 'AIRLINE', 'FLIGHT_NUMBER', 'TAIL_NUMBER', 'ORIGIN_AIRPORT', 'DESTINATION_AIRPORT', 'SCHEDULED_DEPARTURE', 'DEPARTURE_TIME', 'DEPARTURE_DELAY', 'TAXI_OUT', 'WHEELS_OFF', 'SCHEDULED_TIME', 'ELAPSED_TIME', 'AIR_TIME', 'DISTANCE', 'WHEELS_ON', 'TAXI_IN', 'SCHEDULED_ARRIVAL', 'ARRIVAL_TIME', 'ARRIVAL_DELAY', 'DIVERTED', 'CANCELLED', 'CANCELLATION_REASON', 'AIR_SYSTEM_DELAY', 'SECURITY_DELAY', 'AIRLINE_DELAY', 'LATE_AIRCRAFT_DELAY', 'WEATHER_DELAY']\n"}]},"apps":[],"jobName":"paragraph_1524363164019_-2145576415","id":"20180420-214736_1655089125","dateCreated":"2018-04-22T02:12:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:274"},{"text":"%pyspark\n\n#También podemos ver que hay varias variables, especialmente las últimas 6 que son en su mayoría valores nulos \n\nfrom pyspark.sql.functions import col, sum\n\nflights.select(*(sum(col(c).isNull().cast(\"int\")).alias(c) for c in flights.columns)).show()","dateUpdated":"2018-04-22T02:12:44+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----+---+-----------+-------+-------------+-----------+--------------+-------------------+-------------------+--------------+---------------+--------+----------+--------------+------------+--------+--------+---------+-------+-----------------+------------+-------------+--------+---------+-------------------+----------------+--------------+-------------+-------------------+-------------+\n|YEAR|MONTH|DAY|DAY_OF_WEEK|AIRLINE|FLIGHT_NUMBER|TAIL_NUMBER|ORIGIN_AIRPORT|DESTINATION_AIRPORT|SCHEDULED_DEPARTURE|DEPARTURE_TIME|DEPARTURE_DELAY|TAXI_OUT|WHEELS_OFF|SCHEDULED_TIME|ELAPSED_TIME|AIR_TIME|DISTANCE|WHEELS_ON|TAXI_IN|SCHEDULED_ARRIVAL|ARRIVAL_TIME|ARRIVAL_DELAY|DIVERTED|CANCELLED|CANCELLATION_REASON|AIR_SYSTEM_DELAY|SECURITY_DELAY|AIRLINE_DELAY|LATE_AIRCRAFT_DELAY|WEATHER_DELAY|\n+----+-----+---+-----------+-------+-------------+-----------+--------------+-------------------+-------------------+--------------+---------------+--------+----------+--------------+------------+--------+--------+---------+-------+-----------------+------------+-------------+--------+---------+-------------------+----------------+--------------+-------------+-------------------+-------------+\n|   0|    0|  0|          0|      0|            0|      14721|             0|                  0|                  0|         86153|          86153|   89047|     89047|             6|      105071|  105071|       0|    92513|  92513|                0|       92513|       105071|       0|        0|            5729195|         4755640|       4755640|      4755640|            4755640|      4755640|\n+----+-----+---+-----------+-------+-------------+-----------+--------------+-------------------+-------------------+--------------+---------------+--------+----------+--------------+------------+--------+--------+---------+-------+-----------------+------------+-------------+--------+---------+-------------------+----------------+--------------+-------------+-------------------+-------------+\n\n"}]},"apps":[],"jobName":"paragraph_1524363164019_-2145576415","id":"20180420-214303_1446439493","dateCreated":"2018-04-22T02:12:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:275"},{"text":"%pyspark\n\n#Por lo tanto, únicamente nos quedaremos con las siguientes variables\n\ndata = flights.select(['YEAR', 'MONTH', 'DAY', 'DAY_OF_WEEK', 'AIRLINE', 'FLIGHT_NUMBER','TAIL_NUMBER', 'ORIGIN_AIRPORT', 'DESTINATION_AIRPORT', 'SCHEDULED_DEPARTURE','DEPARTURE_DELAY', 'SCHEDULED_TIME','DISTANCE','SCHEDULED_ARRIVAL'])","dateUpdated":"2018-04-22T02:15:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164020_2147467136","id":"20180418-153210_228607992","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:276","user":"anonymous","dateFinished":"2018-04-22T02:15:16+0000","dateStarted":"2018-04-22T02:15:16+0000"},{"text":"%pyspark\n\n#De las variables restantes, quitaremos las filas que contienen nulos en la variable objetivo 'DEPARTURE DELAY', debido a que esta variable si contiene ceros, previamente observamos que los nulos aquí correponden a los vuelos cancelados, así que no nos interesan. La única otra variable con valores nulos es 'TAIL_NUMBER'\n\ndata = data.na.drop(subset=['YEAR', 'MONTH', 'DAY', 'DAY_OF_WEEK', 'AIRLINE', 'FLIGHT_NUMBER','TAIL_NUMBER', 'ORIGIN_AIRPORT', 'DESTINATION_AIRPORT', 'SCHEDULED_DEPARTURE','DEPARTURE_DELAY', 'SCHEDULED_TIME','DISTANCE','SCHEDULED_ARRIVAL'])","dateUpdated":"2018-04-22T02:15:27+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164020_2147467136","id":"20180418-154149_1454535116","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:277","user":"anonymous","dateFinished":"2018-04-22T02:15:27+0000","dateStarted":"2018-04-22T02:15:27+0000"},{"text":"%pyspark\n\n#Al final nos quedamos con 98% de nuestras observaciones originales\n\n(data.count()*1.0)/flights.count()\n","dateUpdated":"2018-04-22T02:15:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.9851937050519507\n"}]},"apps":[],"jobName":"paragraph_1524363164020_2147467136","id":"20180418-154201_222886821","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:278","user":"anonymous","dateFinished":"2018-04-22T02:16:03+0000","dateStarted":"2018-04-22T02:15:35+0000"},{"text":"%pyspark\n\n#Reviso que variables son categoricas, 'AIRLINE','TAIL_NUMBER',ORIGIN_AIRPORT','DESTINATION_AIRPORT'\n\ndata.schema","dateUpdated":"2018-04-22T02:16:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(YEAR,IntegerType,true),StructField(MONTH,IntegerType,true),StructField(DAY,IntegerType,true),StructField(DAY_OF_WEEK,IntegerType,true),StructField(AIRLINE,StringType,true),StructField(FLIGHT_NUMBER,IntegerType,true),StructField(ORIGIN_AIRPORT,StringType,true),StructField(DESTINATION_AIRPORT,StringType,true),StructField(SCHEDULED_DEPARTURE,IntegerType,true),StructField(DEPARTURE_DELAY,IntegerType,true),StructField(SCHEDULED_TIME,IntegerType,true),StructField(DISTANCE,IntegerType,true),StructField(SCHEDULED_ARRIVAL,IntegerType,true)))\n"}]},"apps":[],"jobName":"paragraph_1524363164021_2147082387","id":"20180418-145939_186517180","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:279","user":"anonymous","dateFinished":"2018-04-22T02:16:12+0000","dateStarted":"2018-04-22T02:16:12+0000"},{"text":"%pyspark\n\n#Separamos en un set de entrenamiento y uno de prueba\n\n(training, test) = data.randomSplit([0.7, 0.3])","dateUpdated":"2018-04-22T02:16:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164021_2147082387","id":"20180420-221816_771320686","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:280","user":"anonymous","dateFinished":"2018-04-22T02:16:41+0000","dateStarted":"2018-04-22T02:16:41+0000"},{"text":"%pyspark\n\n#Creo un indexador para cada una de las variable categoricas, una por una\n\nairline_indexer = StringIndexer(inputCol='AIRLINE', outputCol='AIRLINE_numeric', handleInvalid='skip').fit(training)\n\ntailNumber_indexer = StringIndexer(inputCol='TAIL_NUMBER', outputCol='TAIL_NUMBER_numeric', handleInvalid='skip').fit(training)\n\noriginAirport_indexer = StringIndexer(inputCol='ORIGIN_AIRPORT', outputCol='ORIGIN_AIRPORT_numeric', handleInvalid='skip').fit(training)\n\ndestinationAirport_indexer = StringIndexer(inputCol='DESTINATION_AIRPORT', outputCol='DESTINATION_AIRPORT_numeric', handleInvalid='skip').fit(training)\n","dateUpdated":"2018-04-22T02:16:53+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164021_2147082387","id":"20180415-203857_411456149","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:281","user":"anonymous","dateFinished":"2018-04-22T02:17:34+0000","dateStarted":"2018-04-22T02:16:53+0000"},{"text":"%pyspark\n\n#Creo un indexador para cada una de las variable categoricas, una por una\n\nairline_encoder = OneHotEncoder(inputCol='AIRLINE_numeric', outputCol='AIRLINE_vector')\n\ntailNumber_encoder = OneHotEncoder(inputCol='TAIL_NUMBER_numeric', outputCol='TAIL_NUMBER_vector')\n\noriginAirport_encoder = OneHotEncoder(inputCol='ORIGIN_AIRPORT_numeric', outputCol='ORIGIN_AIRPORT_vector')\n\ndestinationAirport_encoder = OneHotEncoder(inputCol='DESTINATION_AIRPORT_numeric', outputCol='DESTINATION_AIRPORT_vector')\n","dateUpdated":"2018-04-22T02:17:43+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164022_-2146730662","id":"20180418-150946_2081372912","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:282","user":"anonymous","dateFinished":"2018-04-22T02:17:43+0000","dateStarted":"2018-04-22T02:17:43+0000"},{"text":"%pyspark\n\n#Genero la columna features, que contiene todas las variables que usare menos 'DEPARTURE_DELAY' que es la variable 'target'\n\nassembler = VectorAssembler(inputCols=['YEAR', 'MONTH', 'DAY', 'DAY_OF_WEEK', 'AIRLINE_vector', 'FLIGHT_NUMBER','TAIL_NUMBER_vector', 'ORIGIN_AIRPORT_vector', 'DESTINATION_AIRPORT_vector', 'SCHEDULED_DEPARTURE', 'SCHEDULED_TIME','DISTANCE','SCHEDULED_ARRIVAL'], outputCol='features')","dateUpdated":"2018-04-22T02:17:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164022_-2146730662","id":"20180418-150853_708243640","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:283","user":"anonymous","dateFinished":"2018-04-22T02:17:56+0000","dateStarted":"2018-04-22T02:17:56+0000"},{"text":"%pyspark\n\n#Reduzco la dimensionalidad para tratar de hacer el proceso más eficiente (Antes de agregarlo, me marcaba un error de SparkContext después de 2 horas de estar corriendo)\n\npca = PCA(k=5, inputCol=\"features\", outputCol=\"pcafeatures\")\n","user":"anonymous","dateUpdated":"2018-04-22T02:18:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524363482150_2129013392","id":"20180422-021802_470809248","dateCreated":"2018-04-22T02:18:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2000","dateFinished":"2018-04-22T02:18:56+0000","dateStarted":"2018-04-22T02:18:56+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n#Genero una regresión lineal\n\nlr = LinearRegression(labelCol='DEPARTURE_DELAY', featuresCol='pcafeatures')\n","dateUpdated":"2018-04-22T02:19:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164022_-2146730662","id":"20180420-223602_2013128997","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:284","user":"anonymous","dateFinished":"2018-04-22T02:19:02+0000","dateStarted":"2018-04-22T02:19:02+0000"},{"text":"%pyspark\n\n#Genero el pipeline con los pasos anteriores\n\npipelinelr = Pipeline(stages=[airline_indexer, tailNumber_indexer, originAirport_indexer, destinationAirport_indexer, airline_encoder, tailNumber_encoder, originAirport_encoder, destinationAirport_encoder, assembler, pca, lr])","dateUpdated":"2018-04-22T02:19:33+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164023_-2147115411","id":"20180415-204738_1670868976","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:285","user":"anonymous","dateFinished":"2018-04-22T02:19:33+0000","dateStarted":"2018-04-22T02:19:33+0000"},{"text":"%pyspark\n\n#Genero el grid para los parametros de la regresión lineal, los parametros no serán los mejores a primera impresión, pero se espera sacar el objetivo rápido, si es posible\n\nparamGridlr = ParamGridBuilder().addGrid(lr.regParam, [0.0, 0.01, 0.5]).addGrid(lr.maxIter, [10, 50, 100]).build()","dateUpdated":"2018-04-22T02:22:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164023_-2147115411","id":"20180415-204247_1570945919","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:286","user":"anonymous","dateFinished":"2018-04-22T02:22:49+0000","dateStarted":"2018-04-22T02:22:49+0000"},{"text":"%pyspark\n\n#Definimos el pipeline que queremos evaluar y el evaluador que ocuparemos, en este caso el RegressionEvaluator toma 'rmse'\n\ncrossvallr = CrossValidator(estimator = pipelinelr, estimatorParamMaps = paramGridlr, evaluator = RegressionEvaluator(labelCol='DEPARTURE_DELAY'), numFolds=10)","dateUpdated":"2018-04-22T02:22:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164023_-2147115411","id":"20180420-223944_1422399196","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:287","user":"anonymous","dateFinished":"2018-04-22T02:22:55+0000","dateStarted":"2018-04-22T02:22:55+0000"},{"text":"%pyspark\n\n#Entrenamos con los datos de entrenamiento al estimador crossvallr, regresión lineal\n\nmodellr = crossvallr.fit(training)\n\n","dateUpdated":"2018-04-22T02:22:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164024_2145928141","id":"20180415-204324_1794675291","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:288","user":"anonymous","dateFinished":"2018-04-22T03:41:44+0000","dateStarted":"2018-04-22T02:22:59+0000"},{"text":"%pyspark\n\n#Veamos cual fue el mejor modelo para regresión lineal\n\nmodellr.bestModel","dateUpdated":"2018-04-22T03:45:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"PipelineModel_48759639964729a17ca5\n"}]},"apps":[],"jobName":"paragraph_1524363164024_2145928141","id":"20180421-000206_134637323","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:289","user":"anonymous","dateFinished":"2018-04-22T03:45:10+0000","dateStarted":"2018-04-22T03:45:10+0000"},{"text":"%pyspark\n\n#Utilizamos el modelo para transformar los datos de prueba\n\nprediction = modellr.transform(test)","dateUpdated":"2018-04-22T03:45:14+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164024_2145928141","id":"20180421-024552_376661677","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:290","user":"anonymous","dateFinished":"2018-04-22T03:45:14+0000","dateStarted":"2018-04-22T03:45:14+0000"},{"text":"%pyspark\n\n#Veamos como se comparan las predicciones con los datos verdaderos\n\nprediction.select(\"DEPARTURE_DELAY\", \"prediction\").show()","dateUpdated":"2018-04-22T03:45:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+------------------+\n|DEPARTURE_DELAY|        prediction|\n+---------------+------------------+\n|             -5|11.647943982313967|\n|              0|12.375855636169826|\n|             31|11.107200311174259|\n|             -4|3.1320365344840653|\n|              6|20.062626557882787|\n|             46| 5.853963344247095|\n|             -6| 7.025111802320017|\n|             -3|11.028882391434488|\n|             91|   9.0295552138855|\n|             23| 8.588373736832898|\n|             -7| 6.117662448279193|\n|             -5| 5.569534477992065|\n|            190|13.925889016020529|\n|             -2|10.063510110246478|\n|             -4| 6.730074136675235|\n|              4| 5.836710899577691|\n|             16| 7.310613333929556|\n|             10|16.398752765416177|\n|             -5| 7.848072676407591|\n|             -3|13.717609030443436|\n+---------------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1524363164025_2145543392","id":"20180421-025606_892652625","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:291","user":"anonymous","dateFinished":"2018-04-22T03:45:30+0000","dateStarted":"2018-04-22T03:45:17+0000"},{"text":"%pyspark\n\n#Genero un árbol de decisión\n\ndt = DecisionTreeRegressor(labelCol='DEPARTURE_DELAY', featuresCol='features')\n","dateUpdated":"2018-04-22T03:45:57+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164025_2145543392","id":"20180415-200717_695332897","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:292","user":"anonymous","dateFinished":"2018-04-22T03:45:57+0000","dateStarted":"2018-04-22T03:45:57+0000"},{"text":"%pyspark\n\n#Genero el pipeline con los pasos anteriores, ahora para el árbol de desición\n\npipelinedt = Pipeline(stages=[airline_indexer, tailNumber_indexer, originAirport_indexer, destinationAirport_indexer, airline_encoder, tailNumber_encoder, originAirport_encoder, destinationAirport_encoder, assembler, pca, dt])\n","dateUpdated":"2018-04-22T03:46:49+0000","config":{"colWidth":12,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164025_2145543392","id":"20180421-030351_1308506840","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:293","user":"anonymous","dateFinished":"2018-04-22T03:46:49+0000","dateStarted":"2018-04-22T03:46:49+0000"},{"text":"%pyspark\n\n#Genero el grid para los parametros de la regresión lineal\n\nparamGriddt = ParamGridBuilder().addGrid(dt.maxDepth, [2, 5, 10]).addGrid(dt.minInstancesPerNode, [1, 5, 10]).build()\n","dateUpdated":"2018-04-22T03:46:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164026_2146697638","id":"20180421-030432_1325273857","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:294","user":"anonymous","dateFinished":"2018-04-22T03:46:55+0000","dateStarted":"2018-04-22T03:46:55+0000"},{"text":"%pyspark\n\n#Definimos el pipeline que queremos evaluar y el evaluador que ocuparemos, en este caso el RegressionEvaluator toma 'rmse'\n\ncrossvaldt = CrossValidator(estimator = pipelinedt, estimatorParamMaps = paramGriddt, evaluator = RegressionEvaluator(labelCol='DEPARTURE_DELAY'), numFolds=10)\n","dateUpdated":"2018-04-22T03:46:58+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164026_2146697638","id":"20180421-030637_1125869905","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:295","user":"anonymous","dateFinished":"2018-04-22T03:46:58+0000","dateStarted":"2018-04-22T03:46:58+0000"},{"text":"%pyspark\n\n#Entrenamos los datos con el estimador crossvaldt, árbol de decisión\n\nmodeldt = crossvaldt.fit(training)\n","dateUpdated":"2018-04-22T03:47:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1524363164026_2146697638","id":"20180421-030725_276455285","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:296","user":"anonymous","dateFinished":"2018-04-22T09:00:08+0000","dateStarted":"2018-04-22T03:47:04+0000"},{"text":"%pyspark\n\n#Veamos cual fue el mejor modelo para el árbol de decisión\n\nmodeldt.bestModel\n","dateUpdated":"2018-04-22T09:02:54+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524363164027_2146312890","id":"20180421-030807_1047551861","dateCreated":"2018-04-22T02:12:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:297","user":"anonymous","dateFinished":"2018-04-22T09:01:16+0000","dateStarted":"2018-04-22T09:01:16+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"PipelineModel_4361b04d2e2d2853cfca\n"}]}},{"text":"%pyspark\n\n#Utilizamos el modelo para transformar los datos de prueba\n\nprediction = modeldt.transform(test)","user":"anonymous","dateUpdated":"2018-04-22T09:01:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524387675986_1510748754","id":"20180422-090115_1061830346","dateCreated":"2018-04-22T09:01:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2236","dateFinished":"2018-04-22T09:01:41+0000","dateStarted":"2018-04-22T09:01:40+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n#Veamos como se comparan las predicciones con los datos verdaderos\n\nprediction.select(\"DEPARTURE_DELAY\", \"prediction\").show()","user":"anonymous","dateUpdated":"2018-04-22T09:02:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524387700941_-1155699041","id":"20180422-090140_1606826732","dateCreated":"2018-04-22T09:01:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2308","dateFinished":"2018-04-22T09:02:09+0000","dateStarted":"2018-04-22T09:02:07+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+------------------+\n|DEPARTURE_DELAY|        prediction|\n+---------------+------------------+\n|             -5|  9.04469562647754|\n|              0|10.439819295549489|\n|             31| 20.57836678412747|\n|             -4|0.7816560073581313|\n|              6| 20.57836678412747|\n|             46|14.885714285714286|\n|             -6| 3.115847142113081|\n|             -3|  9.04469562647754|\n|             91|10.439819295549489|\n|             23| 3.115847142113081|\n|             -7| 15.15678809886377|\n|             -5| 6.653059587777689|\n|            190| 20.57836678412747|\n|             -2| 3.115847142113081|\n|             -4| 15.15678809886377|\n|              4| 2.508437241072692|\n|             16| 31.01356589147287|\n|             10| 20.57836678412747|\n|             -5|  9.04469562647754|\n|             -3|10.439819295549489|\n+---------------+------------------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-04-22T09:02:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524387727233_1810376202","id":"20180422-090207_776685473","dateCreated":"2018-04-22T09:02:07+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2364"}],"name":"tarea07","id":"2DD2RSC4B","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}